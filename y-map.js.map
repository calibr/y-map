{"version":3,"sources":["../yjs/node_modules/browser-pack/_prelude.js","src/Map.js","y-map.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_classCallCheck","instance","Constructor","TypeError","extend","Y","YMap","os","model","contents","opContents","_this","this","_model","id","map","utils","copyObject","eventHandler","EventHandler","ops","userEvents","oldValue","op","key","struct","parentSub","prevType","Promise","resolve","requestTransaction","regeneratorRuntime","mark","_callee","type","wrap","_context","prev","next","delegateYield","getType","t0","stop","left","opContent","deleted","content","insertEvent","undefined","name","object","push","compareIds","target","deleteEvent","callEventListeners","_createClass","value","destroy","_this2","oid","_callee2","_context2","_this3","_callee3","_context3","reject","right","del","modDel","awaitAndPrematurelyCall","_callee4","_context4","applyCreatedOperations","awaitedDeletes","_this4","insert","origin","parent","CustomType","_callee5","_context5","createType","store","getNextOpId","_callee6","_context6","awaitedInserts","addEventListener","removeEventListener","path","observeProperty","events","event","propertyName","property","self","get","then","observe","unobserve","deleteChildObservers","resetObserverPath","promise","set","Map","observePath","slice","_deleteChildObservers","observer","_changed","transaction","_context7","getOperation","receivedOp","class","initType","YMapInitializer","_context8","keys","t1","done","t2","abrupt","defineProperties","props","descriptor","enumerable","configurable","writable","Object","defineProperty","protoProps","staticProps","prototype"],"mappings":"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","file":"y-map.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global Y */\n'use strict'\n\nfunction extend (Y /* :any */) {\n  class YMap {\n    /* ::\n    _model: Id;\n    os: Y.AbstractDatabase;\n    map: Object;\n    contents: any;\n    opContents: Object;\n    eventHandler: Function;\n    */\n    constructor (os, model, contents, opContents) {\n      this._model = model.id\n      this.os = os\n      this.map = Y.utils.copyObject(model.map)\n      this.contents = contents\n      this.opContents = opContents\n      this.eventHandler = new Y.utils.EventHandler(ops => {\n        var userEvents = []\n        for (var i = 0; i < ops.length; i++) {\n          var op = ops[i]\n          var oldValue\n          // key is the name to use to access (op)content\n          var key = op.struct === 'Delete' ? op.key : op.parentSub\n\n          // compute oldValue\n          if (this.opContents[key] != null) {\n            let prevType = this.opContents[key]\n            oldValue = () => {// eslint-disable-line\n              return new Promise((resolve) => {\n                this.os.requestTransaction(function *() {// eslint-disable-line\n                  var type = yield* this.getType(prevType)\n                  resolve(type)\n                })\n              })\n            }\n          } else {\n            oldValue = this.contents[key]\n          }\n          // compute op event\n          if (op.struct === 'Insert') {\n            if (op.left === null) {\n              if (op.opContent != null) {\n                delete this.contents[key]\n                if (op.deleted) {\n                  delete this.opContents[key]\n                } else {\n                  this.opContents[key] = op.opContent\n                }\n              } else {\n                delete this.opContents[key]\n                if (op.deleted) {\n                  delete this.contents[key]\n                } else {\n                  this.contents[key] = op.content\n                }\n              }\n              this.map[key] = op.id\n              var insertEvent\n              if (oldValue === undefined) {\n                insertEvent = {\n                  name: key,\n                  object: this,\n                  type: 'add'\n                }\n              } else {\n                insertEvent = {\n                  name: key,\n                  object: this,\n                  oldValue: oldValue,\n                  type: 'update'\n                }\n              }\n              userEvents.push(insertEvent)\n            }\n          } else if (op.struct === 'Delete') {\n            if (Y.utils.compareIds(this.map[key], op.target)) {\n              delete this.opContents[key]\n              delete this.contents[key]\n              var deleteEvent = {\n                name: key,\n                object: this,\n                oldValue: oldValue,\n                type: 'delete'\n              }\n              userEvents.push(deleteEvent)\n            }\n          } else {\n            throw new Error('Unexpected Operation!')\n          }\n        }\n        if (userEvents.length > 0) {\n          this.eventHandler.callEventListeners(userEvents)\n        }\n      })\n    }\n    _destroy () {\n      this.eventHandler.destroy()\n      this.eventHandler = null\n      this.contents = null\n      this.opContents = null\n      this._model = null\n      this.os = null\n      this.map = null\n    }\n    get (key) {\n      // return property.\n      // if property does not exist, return null\n      // if property is a type, return a promise\n      if (key == null || typeof key !== 'string') {\n        throw new Error('You must specify a key (as string)!')\n      }\n      if (this.opContents[key] == null) {\n        return this.contents[key]\n      } else {\n        return new Promise((resolve) => {\n          var oid = this.opContents[key]\n          this.os.requestTransaction(function *() {\n            var type = yield* this.getType(oid)\n            resolve(type)\n          })\n        })\n      }\n    }\n    /*\n      If there is a primitive (not a custom type), then return it.\n      Returns all primitive values, if propertyName is specified!\n      Note: modifying the return value could result in inconsistencies!\n        -- so make sure to copy it first!\n    */\n    getPrimitive (key) {\n      if (key == null) {\n        return Y.utils.copyObject(this.contents)\n      } else if (typeof key !== 'string') {\n        throw new Error('Key is expected to be a string!')\n      } else {\n        return this.contents[key]\n      }\n    }\n    getType (key) {\n      if (key == null || typeof key !== 'string') {\n        throw new Error('You must specify a key (as string)!')\n      } else if (this.opContents[key] != null) {\n        return new Promise((resolve) => {\n          var oid = this.opContents[key]\n          this.os.requestTransaction(function *() {\n            var type = yield* this.getType(oid)\n            resolve(type)\n          })\n        })\n      } else {\n        return Promise.reject('No property specified for this key!')\n      }\n    }\n    delete (key) {\n      var right = this.map[key]\n      if (right != null) {\n        var del = {\n          target: right,\n          struct: 'Delete'\n        }\n        var eventHandler = this.eventHandler\n        var modDel = Y.utils.copyObject(del)\n        modDel.key = key\n        eventHandler.awaitAndPrematurelyCall([modDel])\n        this.os.requestTransaction(function *() {\n          yield* this.applyCreatedOperations([del])\n          eventHandler.awaitedDeletes(1)\n        })\n      }\n    }\n    set (key, value) {\n      // set property.\n      // if property is a type, return a promise\n      // if not, apply immediately on this type an call event\n\n      var right = this.map[key] || null\n      var insert /* :any */ = {\n        left: null,\n        right: right,\n        origin: null,\n        parent: this._model,\n        parentSub: key,\n        struct: 'Insert'\n      }\n      return new Promise((resolve) => {\n        if (value instanceof Y.utils.CustomType) {\n          // construct a new type\n          this.os.requestTransaction(function *() {\n            var type = yield* this.createType(value)\n            insert.opContent = type._model\n            insert.id = this.store.getNextOpId()\n            yield* this.applyCreatedOperations([insert])\n            resolve(type)\n          })\n        } else {\n          insert.content = value\n          insert.id = this.os.getNextOpId()\n          var eventHandler = this.eventHandler\n          eventHandler.awaitAndPrematurelyCall([insert])\n          this.os.requestTransaction(function *() {\n            yield* this.applyCreatedOperations([insert])\n            eventHandler.awaitedInserts(1)\n          })\n          resolve(value)\n        }\n      })\n    }\n    observe (f) {\n      this.eventHandler.addEventListener(f)\n    }\n    unobserve (f) {\n      this.eventHandler.removeEventListener(f)\n    }\n    /*\n      Observe a path.\n\n      E.g.\n      ```\n      o.set('textarea', Y.TextBind)\n      o.observePath(['textarea'], function(t){\n        // is called whenever textarea is replaced\n        t.bind(textarea)\n      })\n\n      returns a Promise that contains a function that removes the observer from the path.\n    */\n    observePath (path, f) {\n      var self = this\n      function observeProperty (events) {\n        // call f whenever path changes\n        for (var i = 0; i < events.length; i++) {\n          var event = events[i]\n          if (event.name === propertyName) {\n            // call this also for delete events!\n            var property = self.get(propertyName)\n            if (property instanceof Promise) {\n              property.then(f)\n            } else {\n              f(property)\n            }\n          }\n        }\n      }\n\n      if (path.length < 1) {\n        throw new Error('Path must contain at least one element!')\n      } else if (path.length === 1) {\n        var propertyName = path[0]\n        var property = self.get(propertyName)\n        if (property instanceof Promise) {\n          property.then(f)\n        } else {\n          f(property)\n        }\n        this.observe(observeProperty)\n        return Promise.resolve(function () {\n          self.unobserve(f)\n        })\n      } else {\n        var deleteChildObservers\n        var resetObserverPath = function () {\n          var promise = self.get(path[0])\n          if (!promise instanceof Promise) {\n            // its either not defined or a primitive value\n            promise = self.set(path[0], Y.Map)\n          }\n          return promise.then(function (map) {\n            return map.observePath(path.slice(1), f)\n          }).then(function (_deleteChildObservers) {\n            // update deleteChildObservers\n            deleteChildObservers = _deleteChildObservers\n            return Promise.resolve() // Promise does not return anything\n          })\n        }\n        var observer = function (events) {\n          for (var e = 0; e < events.length; e++) {\n            var event = events[e]\n            if (event.name === path[0]) {\n              if (deleteChildObservers != null) {\n                deleteChildObservers()\n              }\n              if (event.type === 'add' || event.type === 'update') {\n                resetObserverPath()\n              }\n              // TODO: what about the delete events?\n            }\n          }\n        }\n        self.observe(observer)\n        return resetObserverPath().then(\n          // this promise contains a function that deletes all the child observers\n          // and how to unobserve the observe from this object\n          new Promise.resolve(function () { // eslint-disable-line\n            if (deleteChildObservers != null) {\n              deleteChildObservers()\n            }\n            self.unobserve(observer)\n          })\n        )\n      }\n    }\n    * _changed (transaction, op) {\n      if (op.struct === 'Delete') {\n        var target = yield* transaction.getOperation(op.target)\n        op.key = target.parentSub\n      }\n      this.eventHandler.receivedOp(op)\n    }\n  }\n  Y.extend('Map', new Y.utils.CustomType({\n    name: 'Map',\n    class: YMap,\n    struct: 'Map',\n    initType: function * YMapInitializer (os, model) {\n      var contents = {}\n      var opContents = {}\n      var map = model.map\n      for (var name in map) {\n        var op = yield* this.getOperation(map[name])\n        if (op.opContent != null) {\n          opContents[name] = op.opContent\n        } else {\n          contents[name] = op.content\n        }\n      }\n      return new YMap(os, model, contents, opContents)\n    }\n  }))\n}\n\nmodule.exports = extend\nif (typeof Y !== 'undefined') {\n  extend(Y)\n}\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/* global Y */\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction extend(Y /* :any */) {\n  var YMap = function () {\n    /* ::\n    _model: Id;\n    os: Y.AbstractDatabase;\n    map: Object;\n    contents: any;\n    opContents: Object;\n    eventHandler: Function;\n    */\n\n    function YMap(os, model, contents, opContents) {\n      var _this = this;\n\n      _classCallCheck(this, YMap);\n\n      this._model = model.id;\n      this.os = os;\n      this.map = Y.utils.copyObject(model.map);\n      this.contents = contents;\n      this.opContents = opContents;\n      this.eventHandler = new Y.utils.EventHandler(function (ops) {\n        var userEvents = [];\n        for (var i = 0; i < ops.length; i++) {\n          var op = ops[i];\n          var oldValue;\n          // key is the name to use to access (op)content\n          var key = op.struct === 'Delete' ? op.key : op.parentSub;\n\n          // compute oldValue\n          if (_this.opContents[key] != null) {\n            (function () {\n              var prevType = _this.opContents[key];\n              oldValue = function oldValue() {\n                // eslint-disable-line\n                return new Promise(function (resolve) {\n                  _this.os.requestTransaction(regeneratorRuntime.mark(function _callee() {\n                    var type;\n                    return regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            return _context.delegateYield(this.getType(prevType), 't0', 1);\n\n                          case 1:\n                            type = _context.t0;\n\n                            resolve(type);\n\n                          case 3:\n                          case 'end':\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, this);\n                  }));\n                });\n              };\n            })();\n          } else {\n            oldValue = _this.contents[key];\n          }\n          // compute op event\n          if (op.struct === 'Insert') {\n            if (op.left === null) {\n              if (op.opContent != null) {\n                delete _this.contents[key];\n                if (op.deleted) {\n                  delete _this.opContents[key];\n                } else {\n                  _this.opContents[key] = op.opContent;\n                }\n              } else {\n                delete _this.opContents[key];\n                if (op.deleted) {\n                  delete _this.contents[key];\n                } else {\n                  _this.contents[key] = op.content;\n                }\n              }\n              _this.map[key] = op.id;\n              var insertEvent;\n              if (oldValue === undefined) {\n                insertEvent = {\n                  name: key,\n                  object: _this,\n                  type: 'add'\n                };\n              } else {\n                insertEvent = {\n                  name: key,\n                  object: _this,\n                  oldValue: oldValue,\n                  type: 'update'\n                };\n              }\n              userEvents.push(insertEvent);\n            }\n          } else if (op.struct === 'Delete') {\n            if (Y.utils.compareIds(_this.map[key], op.target)) {\n              delete _this.opContents[key];\n              delete _this.contents[key];\n              var deleteEvent = {\n                name: key,\n                object: _this,\n                oldValue: oldValue,\n                type: 'delete'\n              };\n              userEvents.push(deleteEvent);\n            }\n          } else {\n            throw new Error('Unexpected Operation!');\n          }\n        }\n        if (userEvents.length > 0) {\n          _this.eventHandler.callEventListeners(userEvents);\n        }\n      });\n    }\n\n    _createClass(YMap, [{\n      key: '_destroy',\n      value: function _destroy() {\n        this.eventHandler.destroy();\n        this.eventHandler = null;\n        this.contents = null;\n        this.opContents = null;\n        this._model = null;\n        this.os = null;\n        this.map = null;\n      }\n    }, {\n      key: 'get',\n      value: function get(key) {\n        var _this2 = this;\n\n        // return property.\n        // if property does not exist, return null\n        // if property is a type, return a promise\n        if (key == null || typeof key !== 'string') {\n          throw new Error('You must specify a key (as string)!');\n        }\n        if (this.opContents[key] == null) {\n          return this.contents[key];\n        } else {\n          return new Promise(function (resolve) {\n            var oid = _this2.opContents[key];\n            _this2.os.requestTransaction(regeneratorRuntime.mark(function _callee2() {\n              var type;\n              return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      return _context2.delegateYield(this.getType(oid), 't0', 1);\n\n                    case 1:\n                      type = _context2.t0;\n\n                      resolve(type);\n\n                    case 3:\n                    case 'end':\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2, this);\n            }));\n          });\n        }\n      }\n      /*\n        If there is a primitive (not a custom type), then return it.\n        Returns all primitive values, if propertyName is specified!\n        Note: modifying the return value could result in inconsistencies!\n          -- so make sure to copy it first!\n      */\n\n    }, {\n      key: 'getPrimitive',\n      value: function getPrimitive(key) {\n        if (key == null) {\n          return Y.utils.copyObject(this.contents);\n        } else if (typeof key !== 'string') {\n          throw new Error('Key is expected to be a string!');\n        } else {\n          return this.contents[key];\n        }\n      }\n    }, {\n      key: 'getType',\n      value: function getType(key) {\n        var _this3 = this;\n\n        if (key == null || typeof key !== 'string') {\n          throw new Error('You must specify a key (as string)!');\n        } else if (this.opContents[key] != null) {\n          return new Promise(function (resolve) {\n            var oid = _this3.opContents[key];\n            _this3.os.requestTransaction(regeneratorRuntime.mark(function _callee3() {\n              var type;\n              return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      return _context3.delegateYield(this.getType(oid), 't0', 1);\n\n                    case 1:\n                      type = _context3.t0;\n\n                      resolve(type);\n\n                    case 3:\n                    case 'end':\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3, this);\n            }));\n          });\n        } else {\n          return Promise.reject('No property specified for this key!');\n        }\n      }\n    }, {\n      key: 'delete',\n      value: function _delete(key) {\n        var right = this.map[key];\n        if (right != null) {\n          var del = {\n            target: right,\n            struct: 'Delete'\n          };\n          var eventHandler = this.eventHandler;\n          var modDel = Y.utils.copyObject(del);\n          modDel.key = key;\n          eventHandler.awaitAndPrematurelyCall([modDel]);\n          this.os.requestTransaction(regeneratorRuntime.mark(function _callee4() {\n            return regeneratorRuntime.wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    return _context4.delegateYield(this.applyCreatedOperations([del]), 't0', 1);\n\n                  case 1:\n                    eventHandler.awaitedDeletes(1);\n\n                  case 2:\n                  case 'end':\n                    return _context4.stop();\n                }\n              }\n            }, _callee4, this);\n          }));\n        }\n      }\n    }, {\n      key: 'set',\n      value: function set(key, value) {\n        var _this4 = this;\n\n        // set property.\n        // if property is a type, return a promise\n        // if not, apply immediately on this type an call event\n\n        var right = this.map[key] || null;\n        var insert /* :any */ = {\n          left: null,\n          right: right,\n          origin: null,\n          parent: this._model,\n          parentSub: key,\n          struct: 'Insert'\n        };\n        return new Promise(function (resolve) {\n          if (value instanceof Y.utils.CustomType) {\n            // construct a new type\n            _this4.os.requestTransaction(regeneratorRuntime.mark(function _callee5() {\n              var type;\n              return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      return _context5.delegateYield(this.createType(value), 't0', 1);\n\n                    case 1:\n                      type = _context5.t0;\n\n                      insert.opContent = type._model;\n                      insert.id = this.store.getNextOpId();\n                      return _context5.delegateYield(this.applyCreatedOperations([insert]), 't1', 5);\n\n                    case 5:\n                      resolve(type);\n\n                    case 6:\n                    case 'end':\n                      return _context5.stop();\n                  }\n                }\n              }, _callee5, this);\n            }));\n          } else {\n            insert.content = value;\n            insert.id = _this4.os.getNextOpId();\n            var eventHandler = _this4.eventHandler;\n            eventHandler.awaitAndPrematurelyCall([insert]);\n            _this4.os.requestTransaction(regeneratorRuntime.mark(function _callee6() {\n              return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                while (1) {\n                  switch (_context6.prev = _context6.next) {\n                    case 0:\n                      return _context6.delegateYield(this.applyCreatedOperations([insert]), 't0', 1);\n\n                    case 1:\n                      eventHandler.awaitedInserts(1);\n\n                    case 2:\n                    case 'end':\n                      return _context6.stop();\n                  }\n                }\n              }, _callee6, this);\n            }));\n            resolve(value);\n          }\n        });\n      }\n    }, {\n      key: 'observe',\n      value: function observe(f) {\n        this.eventHandler.addEventListener(f);\n      }\n    }, {\n      key: 'unobserve',\n      value: function unobserve(f) {\n        this.eventHandler.removeEventListener(f);\n      }\n      /*\n        Observe a path.\n         E.g.\n        ```\n        o.set('textarea', Y.TextBind)\n        o.observePath(['textarea'], function(t){\n          // is called whenever textarea is replaced\n          t.bind(textarea)\n        })\n         returns a Promise that contains a function that removes the observer from the path.\n      */\n\n    }, {\n      key: 'observePath',\n      value: function observePath(path, f) {\n        var self = this;\n        function observeProperty(events) {\n          // call f whenever path changes\n          for (var i = 0; i < events.length; i++) {\n            var event = events[i];\n            if (event.name === propertyName) {\n              // call this also for delete events!\n              var property = self.get(propertyName);\n              if (property instanceof Promise) {\n                property.then(f);\n              } else {\n                f(property);\n              }\n            }\n          }\n        }\n\n        if (path.length < 1) {\n          throw new Error('Path must contain at least one element!');\n        } else if (path.length === 1) {\n          var propertyName = path[0];\n          var property = self.get(propertyName);\n          if (property instanceof Promise) {\n            property.then(f);\n          } else {\n            f(property);\n          }\n          this.observe(observeProperty);\n          return Promise.resolve(function () {\n            self.unobserve(f);\n          });\n        } else {\n          var deleteChildObservers;\n          var resetObserverPath = function resetObserverPath() {\n            var promise = self.get(path[0]);\n            if (!promise instanceof Promise) {\n              // its either not defined or a primitive value\n              promise = self.set(path[0], Y.Map);\n            }\n            return promise.then(function (map) {\n              return map.observePath(path.slice(1), f);\n            }).then(function (_deleteChildObservers) {\n              // update deleteChildObservers\n              deleteChildObservers = _deleteChildObservers;\n              return Promise.resolve(); // Promise does not return anything\n            });\n          };\n          var observer = function observer(events) {\n            for (var e = 0; e < events.length; e++) {\n              var event = events[e];\n              if (event.name === path[0]) {\n                if (deleteChildObservers != null) {\n                  deleteChildObservers();\n                }\n                if (event.type === 'add' || event.type === 'update') {\n                  resetObserverPath();\n                }\n                // TODO: what about the delete events?\n              }\n            }\n          };\n          self.observe(observer);\n          return resetObserverPath().then(\n          // this promise contains a function that deletes all the child observers\n          // and how to unobserve the observe from this object\n          new Promise.resolve(function () {\n            // eslint-disable-line\n            if (deleteChildObservers != null) {\n              deleteChildObservers();\n            }\n            self.unobserve(observer);\n          }));\n        }\n      }\n    }, {\n      key: '_changed',\n      value: regeneratorRuntime.mark(function _changed(transaction, op) {\n        var target;\n        return regeneratorRuntime.wrap(function _changed$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!(op.struct === 'Delete')) {\n                  _context7.next = 4;\n                  break;\n                }\n\n                return _context7.delegateYield(transaction.getOperation(op.target), 't0', 2);\n\n              case 2:\n                target = _context7.t0;\n\n                op.key = target.parentSub;\n\n              case 4:\n                this.eventHandler.receivedOp(op);\n\n              case 5:\n              case 'end':\n                return _context7.stop();\n            }\n          }\n        }, _changed, this);\n      })\n    }]);\n\n    return YMap;\n  }();\n\n  Y.extend('Map', new Y.utils.CustomType({\n    name: 'Map',\n    class: YMap,\n    struct: 'Map',\n    initType: regeneratorRuntime.mark(function YMapInitializer(os, model) {\n      var contents, opContents, map, name, op;\n      return regeneratorRuntime.wrap(function YMapInitializer$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              contents = {};\n              opContents = {};\n              map = model.map;\n              _context8.t0 = regeneratorRuntime.keys(map);\n\n            case 4:\n              if ((_context8.t1 = _context8.t0()).done) {\n                _context8.next = 11;\n                break;\n              }\n\n              name = _context8.t1.value;\n              return _context8.delegateYield(this.getOperation(map[name]), 't2', 7);\n\n            case 7:\n              op = _context8.t2;\n\n              if (op.opContent != null) {\n                opContents[name] = op.opContent;\n              } else {\n                contents[name] = op.content;\n              }\n              _context8.next = 4;\n              break;\n\n            case 11:\n              return _context8.abrupt('return', new YMap(os, model, contents, opContents));\n\n            case 12:\n            case 'end':\n              return _context8.stop();\n          }\n        }\n      }, YMapInitializer, this);\n    })\n  }));\n}\n\nmodule.exports = extend;\nif (typeof Y !== 'undefined') {\n  extend(Y);\n}\n\n},{}]},{},[1])\n\n"],"sourceRoot":"/source/"}