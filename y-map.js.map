{"version":3,"sources":["../yjs/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/Map.js","y-map.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_classCallCheck","instance","Constructor","TypeError","extend","Y","YMap","os","model","contents","opContents","_this","this","_model","id","map","utils","copyObject","eventHandler","EventHandler","op","oldValue","key","struct","parentSub","prevType","Promise","resolve","requestTransaction","regeneratorRuntime","mark","_callee","type","wrap","_context","prev","next","delegateYield","getType","t0","stop","left","value","opContent","_callee2","_context2","deleted","content","undefined","callEventListeners","name","object","compareIds","target","_createClass","destroy","_this2","oid","_callee3","_context3","Object","keys","concat","_this3","_callee4","_context4","reject","right","del","modDel","_callee5","_context5","awaitOps","applyCreatedOperations","awaitAndPrematurelyCall","_this4","insert","getNextOpId","origin","parent","typeDefinition","isTypeDefinition","typeid","_callee6","_context6","createType","_callee7","_context7","addEventListener","removeEventListener","path","observeProperty","event","propertyName","property","self","get","then","observe","unobserve","deleteChildObservers","resetObserverPath","promise","set","Map","observePath","slice","_deleteChildObservers","observer","_changed","transaction","_context8","getOperation","receivedOp","CustomType","class","initType","YMapInitializer","_context9","t1","done","t2","abrupt","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","prototype"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCCA,YCKA,SAASK,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCDHhH,QAASC,GAAQC,GCMf,GDLMC,GAAI,WASR,QATIA,GASSC,EAAIC,EAAOC,EAAUC,GCOhC,GAAIC,GAAQC,IAEZZ,GAAgBY,KDlBdN,GAUFM,KAAKC,OAASL,EAAMM,GACpBF,KAAKL,GAAKA,EACVK,KAAKG,IAAMV,EAAEW,MAAMC,WAAWT,EAAMO,KACpCH,KAAKH,SAAWA,EAChBG,KAAKF,WAAaA,EAClBE,KAAKM,aAAe,GAAIb,GAAEW,MAAMG,aAAa,SAAAC,GAC3C,GAAIC,GAEAC,EAAoB,WAAdF,EAAGG,OAAsBH,EAAGE,IAAMF,EAAGI,SAe9C,IAZ2B,MAAxBb,EAAKD,WAAWY,ICWlB,WDVA,GAAIG,GAAWd,EAAKD,WAAWY,EAC/BD,GAAW,WACT,MAAO,IAAIK,SAAQ,SAACC,GAClBhB,EAAKJ,GAAGqB,mBAAkBC,mBAAAC,KAAC,QAAAC,KCavB,GDZEC,ECaF,OAAOH,oBAAmBI,KAAK,SAAkBC,GAC/C,OACE,OAAQA,EAASC,KAAOD,EAASE,MAC/B,IAAK,GACH,MAAOF,GAASG,cDjBRzB,KAAK0B,QAAQb,GAAS,KAAA,ECmBhC,KAAK,GDnBTO,EAAIE,EAAAK,GACRZ,EAAQK,ECuBA,KAAK,GACL,IAAK,MACH,MAAOE,GAASM,SAGrBT,EAASnB,eDvBpBS,EAAWV,EAAKF,SAASa,GAGT,WAAdF,EAAGG,QACL,GAAgB,OAAZH,EAAGqB,KAAe,CACpB,GAAIC,EAEgB,OAAhBtB,EAAGuB,WACLD,EAAQ,WACN,MAAO,IAAIhB,SAAQ,SAACC,GAClBhB,EAAKJ,GAAGqB,mBAAkBC,mBAAAC,KAAC,QAAAc,KC+BzB,GD9BIZ,EC+BJ,OAAOH,oBAAmBI,KAAK,SAAmBY,GAChD,OACE,OAAQA,EAAUV,KAAOU,EAAUT,MACjC,IAAK,GACH,MAAOS,GAAUR,cDnCPzB,KAAK0B,QAAQlB,EAAGuB,WAAU,KAAA,ECqCtC,KAAK,GDrCPX,EAAIa,EAAAN,GACRZ,EAAQK,ECyCF,KAAK,GACL,IAAK,MACH,MAAOa,GAAUL,SAGtBI,EAAUhC,kBD1CZD,GAAKF,SAASa,GACjBF,EAAG0B,cACEnC,GAAKD,WAAWY,GAEvBX,EAAKD,WAAWY,GAAOF,EAAGuB,YAG5BD,EAAQtB,EAAG2B,QAAQ,SACZpC,GAAKD,WAAWY,GACnBF,EAAG0B,cACEnC,GAAKF,SAASa,GAErBX,EAAKF,SAASa,GAAOF,EAAG2B,QAAQ,IAGpCpC,EAAKI,IAAIO,GAAOF,EAAGN,GACFkC,SAAb3B,EACFV,EAAKO,aAAa+B,oBAChBC,KAAM5B,EACN6B,OAAMxC,EACNqB,KAAM,MACNU,MAAOA,IAGT/B,EAAKO,aAAa+B,oBAChBC,KAAM5B,EACN6B,OAAMxC,EACNU,SAAUA,EACVW,KAAM,SACNU,MAAOA,SAIR,CAAA,GAAkB,WAAdtB,EAAGG,OAYZ,KAAM,IAAI/B,OAAM,wBAXZa,GAAEW,MAAMoC,WAAWzC,EAAKI,IAAIO,GAAMF,EAAGiC,gBAChC1C,GAAKD,WAAWY,SAChBX,GAAKF,SAASa,GACrBX,EAAKO,aAAa+B,oBAChBC,KAAM5B,EACN6B,OAAMxC,EACNU,SAAUA,EACVW,KAAM,eCqZhB,MA9VAsB,GDhJIhD,ICiJFgB,IAAK,WACLoB,MAAO,WDhDP9B,KAAKM,aAAaqC,UAClB3C,KAAKM,aAAe,KACpBN,KAAKH,SAAW,KAChBG,KAAKF,WAAa,KAClBE,KAAKC,OAAS,KACdD,KAAKL,GAAK,KACVK,KAAKG,IAAM,QCoDXO,IAAK,MACLoB,MAAO,SDnDJpB,GCoDD,GAAIkC,GAAS5C,IDhDf,IAAW,MAAPU,GAA8B,gBAARA,GACxB,KAAM,IAAI9B,OAAM,sCAElB,OAA4B,OAAxBoB,KAAKF,WAAWY,GACXV,KAAKH,SAASa,GAEd,GAAII,SAAQ,SAACC,GAClB,GAAI8B,GAAMD,EAAK9C,WAAWY,EAC1BkC,GAAKjD,GAAGqB,mBAAkBC,mBAAAC,KAAC,QAAA4B,KCsDvB,GDrDE1B,ECsDF,OAAOH,oBAAmBI,KAAK,SAAmB0B,GAChD,OACE,OAAQA,EAAUxB,KAAOwB,EAAUvB,MACjC,IAAK,GACH,MAAOuB,GAAUtB,cD1DTzB,KAAK0B,QAAQmB,GAAI,KAAA,EC4D3B,KAAK,GD5DTzB,EAAI2B,EAAApB,GACRZ,EAAQK,ECgEA,KAAK,GACL,IAAK,MACH,MAAO2B,GAAUnB,SAGtBkB,EAAU9C,cAMrBU,IAAK,OACLoB,MAAO,WDtEP,MAAOkB,QAAOC,KAAKjD,KAAKH,UAAUqD,OAAOF,OAAOC,KAAKjD,KAAKF,gBC0E1DY,IAAK,iBACLoB,MAAO,WDxEP,MAAOkB,QAAOC,KAAKjD,KAAKH,aC4ExBa,IAAK,YACLoB,MAAO,WD1EP,MAAOkB,QAAOC,KAAKjD,KAAKF,eCqFxBY,IAAK,eACLoB,MAAO,SD9EKpB,GACZ,GAAW,MAAPA,EACF,MAAOjB,GAAEW,MAAMC,WAAWL,KAAKH,SAC1B,IAAmB,gBAARa,GAChB,KAAM,IAAI9B,OAAM,kCAEhB,OAAOoB,MAAKH,SAASa,MCkFvBA,IAAK,UACLoB,MAAO,SDhFApB,GCiFL,GAAIyC,GAASnD,IDhFf,IAAW,MAAPU,GAA8B,gBAARA,GACxB,KAAM,IAAI9B,OAAM,sCACX,OAA4B,OAAxBoB,KAAKF,WAAWY,GAClB,GAAII,SAAQ,SAACC,GAClB,GAAI8B,GAAMM,EAAKrD,WAAWY,EAC1ByC,GAAKxD,GAAGqB,mBAAkBC,mBAAAC,KAAC,QAAAkC,KCmFvB,GDlFEhC,ECmFF,OAAOH,oBAAmBI,KAAK,SAAmBgC,GAChD,OACE,OAAQA,EAAU9B,KAAO8B,EAAU7B,MACjC,IAAK,GACH,MAAO6B,GAAU5B,cDvFTzB,KAAK0B,QAAQmB,GAAI,KAAA,ECyF3B,KAAK,GDzFTzB,EAAIiC,EAAA1B,GACRZ,EAAQK,EC6FA,KAAK,GACL,IAAK,MACH,MAAOiC,GAAUzB,SAGtBwB,EAAUpD,WD9FZc,QAAQwC,OAAO,0CCsGxB5C,IAAK,SACLoB,MAAO,SDpGDpB,GACN,GAAI6C,GAAQvD,KAAKG,IAAIO,EACrB,IAAa,MAAT6C,EAAe,CACjB,GAAIC,IACFf,OAAQc,EACR5C,OAAQ,UAENL,EAAeN,KAAKM,aACpBmD,EAAShE,EAAEW,MAAMC,WAAWmD,EAChCC,GAAO/C,IAAMA,EACbV,KAAKL,GAAGqB,mBAAkBC,mBAAAC,KAAC,QAAAwC,KCqGvB,MAAOzC,oBAAmBI,KAAK,SAAmBsC,GAChD,OACE,OAAQA,EAAUpC,KAAOoC,EAAUnC,MACjC,IAAK,GACH,MAAOmC,GAAUlC,cDxGpBnB,EAAasD,SAAS5D,KAAMA,KAAK6D,yBAA0BL,KAAM,KAAA,EC0GhE,KAAK,GACL,IAAK,MACH,MAAOG,GAAU/B,SAGtB8B,EAAU1D,SD9GfM,EAGWwD,yBAAyBL,QCmHxC/C,IAAK,MACLoB,MAAO,SDjHJpB,EAAKoB,GCkHN,GAAIiC,GAAS/D,KD7GXuD,EAAQvD,KAAKG,IAAIO,IAAQ,KACzBsD,GACF9D,GAAIF,KAAKL,GAAGsE,YAAY,GACxBpC,KAAM,KACN0B,MAAOA,EACPW,OAAQ,KACRC,OAAQnE,KAAKC,OACbW,UAAWF,EACXC,OAAQ,UAENL,EAAeN,KAAKM,YACxB,OAAO,IAAIQ,SAAQ,SAACC,GAClB,GAAIqD,GAAiB3E,EAAEW,MAAMiE,iBAAiBvC,EAC9C,IAAIsC,KAAmB,EAAO,CAC5B,GAAIE,GAASP,EAAKpE,GAAGsE,YAAY,EACjCD,GAAOjC,UAAYuC,EAAMP,EAEpBpE,GAAGqB,mBAAkBC,mBAAAC,KAAC,QAAAqD,KCoHvB,GDnHEnD,ECoHF,OAAOH,oBAAmBI,KAAK,SAAmBmD,GAChD,OACE,OAAQA,EAAUjD,KAAOiD,EAAUhD,MACjC,IAAK,GACH,MAAOgD,GAAU/C,cDxHTzB,KAAKyE,WAAWL,EAAgBE,GAAO,KAAA,EC0HjD,KAAK,GAEH,MD5HNlD,GAAIoD,EAAA7C,GC4HS6C,EAAU/C,cD3HpBnB,EAAasD,SAAS5D,KAAMA,KAAK6D,yBAA0BG,KAAS,KAAA,EC6HnE,KAAK,GD5HbjD,EAAQK,EC+HA,KAAK,GACL,IAAK,MACH,MAAOoD,GAAU5C,SAGtB2C,EAAUvE,SDnIfM,EAGWwD,yBAAyBE,QAEtCA,GAAO7B,SAAWL,GAClBiC,EAAKpE,GAAGqB,mBAAkBC,mBAAAC,KAAC,QAAAwD,KCqIvB,MAAOzD,oBAAmBI,KAAK,SAAmBsD,GAChD,OACE,OAAQA,EAAUpD,KAAOoD,EAAUnD,MACjC,IAAK,GACH,MAAOmD,GAAUlD,cDxIpBnB,EAAasD,SAAS5D,KAAMA,KAAK6D,yBAA0BG,KAAS,KAAA,EC0InE,KAAK,GACL,IAAK,MACH,MAAOW,GAAU/C,SAGtB8C,EAAU1E,SD9IfM,EAGWwD,yBAAyBE,IACtCjD,EAAQe,QCoJZpB,IAAK,UACLoB,MAAO,SDjJAnD,GACPqB,KAAKM,aAAasE,iBAAiBjG,MCoJnC+B,IAAK,YACLoB,MAAO,SDnJEnD,GACTqB,KAAKM,aAAauE,oBAAoBlG,MCkKtC+B,IAAK,cACLoB,MAAO,SDpJIgD,EAAMnG,GAEjB,QAASoG,GAAiBC,GAExB,GAAIA,EAAM1C,OAAS2C,EAAc,CAE/B,GAAIC,GAAWC,EAAKC,IAAIH,EACpBC,aAAoBpE,SACtBoE,EAASG,KAAK1G,GAEdA,EAAEuG,IATR,GAAIC,GAAOnF,IAcX,IAAI8E,EAAK7F,OAAS,EAEhB,MADAN,GAAEqB,MACKc,QAAQC,QAAQ,aAClB,IAAoB,IAAhB+D,EAAK7F,OAAc,CAC5B,GAAIgG,GAAeH,EAAK,GACpBI,EAAWC,EAAKC,IAAIH,EAOxB,OANIC,aAAoBpE,SACtBoE,EAASG,KAAK1G,GAEdA,EAAEuG,GAEJlF,KAAKsF,QAAQP,GACNjE,QAAQC,QAAQ,WACrBoE,EAAKI,UAAU5G,KAGjB,GAAI6G,GACAC,EAAoB,WACtB,GAAIC,GAAUP,EAAKC,IAAIN,EAAK,GAK5B,QAJKY,YAAmB5E,WAEtB4E,EAAUP,EAAKQ,IAAIb,EAAK,GAAIrF,EAAEmG,MAEzBF,EAAQL,KAAK,SAAUlF,GAC5B,MAAOA,GAAI0F,YAAYf,EAAKgB,MAAM,GAAInH,KACrC0G,KAAK,SAAUU,GAGhB,MADAP,GAAuBO,EAChBjF,QAAQC,aAGfiF,EAAW,SAAUhB,GACnBA,EAAM1C,OAASwC,EAAK,KACM,MAAxBU,GACFA,KAEiB,QAAfR,EAAM5D,MAAiC,WAAf4D,EAAM5D,OAChCqE,KAMN,OADAN,GAAKG,QAAQU,GACNP,IAAoBJ,KAAK,WAG9B,MAAOvE,SAAQC,QAAQ,WACO,MAAxByE,GACFA,IAEFL,EAAKI,UAAUS,UC2JrBtF,IAAK,WACLoB,MAAOb,mBAAmBC,KAAK,QAAS+E,GDvJ9BC,EAAa1F,GCwJrB,GDtJIiC,ECuJJ,OAAOxB,oBAAmBI,KAAK,SAAmB8E,GAChD,OACE,OAAQA,EAAU5E,KAAO4E,EAAU3E,MACjC,IAAK,GACH,GD5JQ,WAAdhB,EAAGG,OAAmB,CC6JdwF,EAAU3E,KAAO,CACjB,OAGF,MAAO2E,GAAU1E,cDhKLyE,EAAYE,aAAa5F,EAAGiC,QAAO,KAAA,ECkKjD,KAAK,GDlKPA,EAAM0D,EAAAxE,GACVnB,EAAGE,IAAM+B,EAAO7B,SCsKV,KAAK,GDpKbZ,KAAKM,aAAa+F,WAAW7F,ECuKrB,KAAK,GACL,IAAK,MACH,MAAO2F,GAAUvE,SAGtBqE,EAAUjG,WD1ebN,IAiUND,GAAED,OAAO,MAAO,GAAIC,GAAEW,MAAMkG,YAC1BhE,KAAM,MACNiE,QAAO7G,EACPiB,OAAQ,MACR6F,SAAQvF,mBAAAC,KAAE,QAAWuF,GAAiB9G,EAAIC,GCiLxC,GDhLIC,GACAC,EACAK,EACKmC,EACH9B,CC6KN,OAAOS,oBAAmBI,KAAK,SAA0BqF,GACvD,OACE,OAAQA,EAAUnF,KAAOmF,EAAUlF,MACjC,IAAK,GDpLP3B,KACAC,KACAK,EAAMP,EAAMO,ICsLRuG,EAAU/E,GAAKV,mBAAmBgC,KDrLzB9C,ECuLX,KAAK,GACH,IAAKuG,EAAUC,GAAKD,EAAU/E,MAAMiF,KAAM,CACxCF,EAAUlF,KAAO,EACjB,OAIF,MD9LCc,GAAIoE,EAAAC,GAAA7E,MC8LE4E,EAAUjF,cD7LPzB,KAAKoG,aAAajG,EAAImC,IAAM,KAAA,EC+LxC,KAAK,GD/LL9B,EAAEkG,EAAAG,GACc,MAAhBrG,EAAGuB,UACLjC,EAAWwC,GAAQ9B,EAAGuB,UAEtBlC,EAASyC,GAAQ9B,EAAG2B,QAAQ,GCmMxBuE,EAAUlF,KAAO,CACjB,MAEF,KAAK,IACH,MAAOkF,GAAUI,OAAO,SDpMzB,GAAIpH,GAAKC,EAAIC,EAAOC,EAAUC,GCsM/B,KAAK,IACL,IAAK,MACH,MAAO4G,GAAU9E,SDpNN6E,EAAezG,WCrUxC,GAAI0C,GAAe,WAAe,QAASqE,GAAiBtE,EAAQuE,GAAS,IAAK,GAAItI,GAAI,EAAGA,EAAIsI,EAAM/H,OAAQP,IAAK,CAAE,GAAIuI,GAAaD,EAAMtI,EAAIuI,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMpE,OAAOqE,eAAe5E,EAAQwE,EAAWvG,IAAKuG,IAAiB,MAAO,UAAU3H,EAAagI,EAAYC,GAAiJ,MAA9HD,IAAYP,EAAiBzH,EAAYkI,UAAWF,GAAiBC,GAAaR,EAAiBzH,EAAaiI,GAAqBjI,KDsVjiBH,GAAOJ,QAAUS,EACA,mBAANC,IACTD,EAAOC,aC8ME","file":"y-map.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global Y */\n'use strict'\n\nfunction extend (Y /* :any */) {\n  class YMap {\n    /* ::\n    _model: Id;\n    os: Y.AbstractDatabase;\n    map: Object;\n    contents: any;\n    opContents: Object;\n    eventHandler: Function;\n    */\n    constructor (os, model, contents, opContents) {\n      this._model = model.id\n      this.os = os\n      this.map = Y.utils.copyObject(model.map)\n      this.contents = contents\n      this.opContents = opContents\n      this.eventHandler = new Y.utils.EventHandler(op => {\n        var oldValue\n        // key is the name to use to access (op)content\n        var key = op.struct === 'Delete' ? op.key : op.parentSub\n\n        // compute oldValue\n        if (this.opContents[key] != null) {\n          let prevType = this.opContents[key]\n          oldValue = () => {// eslint-disable-line\n            return new Promise((resolve) => {\n              this.os.requestTransaction(function *() {// eslint-disable-line\n                var type = yield* this.getType(prevType)\n                resolve(type)\n              })\n            })\n          }\n        } else {\n          oldValue = this.contents[key]\n        }\n        // compute op event\n        if (op.struct === 'Insert') {\n          if (op.left === null) {\n            var value\n            // TODO: what if op.deleted??? I partially handles this case here.. (maybe from the previous version)\n            if (op.opContent != null) {\n              value = () => {// eslint-disable-line\n                return new Promise((resolve) => {\n                  this.os.requestTransaction(function *() {// eslint-disable-line\n                    var type = yield* this.getType(op.opContent)\n                    resolve(type)\n                  })\n                })\n              }\n              delete this.contents[key]\n              if (op.deleted) {\n                delete this.opContents[key]\n              } else {\n                this.opContents[key] = op.opContent\n              }\n            } else {\n              value = op.content[0]\n              delete this.opContents[key]\n              if (op.deleted) {\n                delete this.contents[key]\n              } else {\n                this.contents[key] = op.content[0]\n              }\n            }\n            this.map[key] = op.id\n            if (oldValue === undefined) {\n              this.eventHandler.callEventListeners({\n                name: key,\n                object: this,\n                type: 'add',\n                value: value\n              })\n            } else {\n              this.eventHandler.callEventListeners({\n                name: key,\n                object: this,\n                oldValue: oldValue,\n                type: 'update',\n                value: value\n              })\n            }\n          }\n        } else if (op.struct === 'Delete') {\n          if (Y.utils.compareIds(this.map[key], op.target)) {\n            delete this.opContents[key]\n            delete this.contents[key]\n            this.eventHandler.callEventListeners({\n              name: key,\n              object: this,\n              oldValue: oldValue,\n              type: 'delete'\n            })\n          }\n        } else {\n          throw new Error('Unexpected Operation!')\n        }\n      })\n    }\n    _destroy () {\n      this.eventHandler.destroy()\n      this.eventHandler = null\n      this.contents = null\n      this.opContents = null\n      this._model = null\n      this.os = null\n      this.map = null\n    }\n    get (key) {\n      // return property.\n      // if property does not exist, return null\n      // if property is a type, return a promise\n      if (key == null || typeof key !== 'string') {\n        throw new Error('You must specify a key (as string)!')\n      }\n      if (this.opContents[key] == null) {\n        return this.contents[key]\n      } else {\n        return new Promise((resolve) => {\n          var oid = this.opContents[key]\n          this.os.requestTransaction(function *() {\n            var type = yield* this.getType(oid)\n            resolve(type)\n          })\n        })\n      }\n    }\n    keys () {\n      return Object.keys(this.contents).concat(Object.keys(this.opContents))\n    }\n    keysPrimitives () {\n      return Object.keys(this.contents)\n    }\n    keysTypes () {\n      return Object.keys(this.opContents)\n    }\n    /*\n      If there is a primitive (not a custom type), then return it.\n      Returns all primitive values, if propertyName is specified!\n      Note: modifying the return value could result in inconsistencies!\n        -- so make sure to copy it first!\n    */\n    getPrimitive (key) {\n      if (key == null) {\n        return Y.utils.copyObject(this.contents)\n      } else if (typeof key !== 'string') {\n        throw new Error('Key is expected to be a string!')\n      } else {\n        return this.contents[key]\n      }\n    }\n    getType (key) {\n      if (key == null || typeof key !== 'string') {\n        throw new Error('You must specify a key (as string)!')\n      } else if (this.opContents[key] != null) {\n        return new Promise((resolve) => {\n          var oid = this.opContents[key]\n          this.os.requestTransaction(function *() {\n            var type = yield* this.getType(oid)\n            resolve(type)\n          })\n        })\n      } else {\n        return Promise.reject('No property specified for this key!')\n      }\n    }\n    delete (key) {\n      var right = this.map[key]\n      if (right != null) {\n        var del = {\n          target: right,\n          struct: 'Delete'\n        }\n        var eventHandler = this.eventHandler\n        var modDel = Y.utils.copyObject(del)\n        modDel.key = key\n        this.os.requestTransaction(function *() {\n          yield* eventHandler.awaitOps(this, this.applyCreatedOperations, [[del]])\n        })\n        // always remember to do that after this.os.requestTransaction\n        // (otherwise values might contain a undefined reference to type)\n        eventHandler.awaitAndPrematurelyCall([modDel])\n      }\n    }\n    set (key, value) {\n      // set property.\n      // if property is a type, return a promise\n      // if not, apply immediately on this type an call event\n\n      var right = this.map[key] || null\n      var insert /* :any */ = {\n        id: this.os.getNextOpId(1),\n        left: null,\n        right: right,\n        origin: null,\n        parent: this._model,\n        parentSub: key,\n        struct: 'Insert'\n      }\n      var eventHandler = this.eventHandler\n      return new Promise((resolve) => {\n        var typeDefinition = Y.utils.isTypeDefinition(value)\n        if (typeDefinition !== false) {\n          var typeid = this.os.getNextOpId(1)\n          insert.opContent = typeid\n          // construct a new type\n          this.os.requestTransaction(function *() {\n            var type = yield* this.createType(typeDefinition, typeid)\n            yield* eventHandler.awaitOps(this, this.applyCreatedOperations, [[insert]])\n            resolve(type)\n          })\n          // always remember to do that after this.os.requestTransaction\n          // (otherwise values might contain a undefined reference to type)\n          eventHandler.awaitAndPrematurelyCall([insert])\n        } else {\n          insert.content = [value]\n          this.os.requestTransaction(function * () {\n            yield* eventHandler.awaitOps(this, this.applyCreatedOperations, [[insert]])\n          })\n          // always remember to do that after this.os.requestTransaction\n          // (otherwise values might contain a undefined reference to type)\n          eventHandler.awaitAndPrematurelyCall([insert])\n          resolve(value)\n        }\n      })\n    }\n    observe (f) {\n      this.eventHandler.addEventListener(f)\n    }\n    unobserve (f) {\n      this.eventHandler.removeEventListener(f)\n    }\n    /*\n      Observe a path.\n\n      E.g.\n      ```\n      o.set('textarea', Y.TextBind)\n      o.observePath(['textarea'], function(t){\n        // is called whenever textarea is replaced\n        t.bind(textarea)\n      })\n\n      returns a Promise that contains a function that removes the observer from the path.\n    */\n    observePath (path, f) {\n      var self = this\n      function observeProperty (event) {\n        // call f whenever path changes\n        if (event.name === propertyName) {\n          // call this also for delete events!\n          var property = self.get(propertyName)\n          if (property instanceof Promise) {\n            property.then(f)\n          } else {\n            f(property)\n          }\n        }\n      }\n\n      if (path.length < 1) {\n        f(this)\n        return Promise.resolve(function () {})\n      } else if (path.length === 1) {\n        var propertyName = path[0]\n        var property = self.get(propertyName)\n        if (property instanceof Promise) {\n          property.then(f)\n        } else {\n          f(property)\n        }\n        this.observe(observeProperty)\n        return Promise.resolve(function () {\n          self.unobserve(f)\n        })\n      } else {\n        var deleteChildObservers\n        var resetObserverPath = function () {\n          var promise = self.get(path[0])\n          if (!promise instanceof Promise) {\n            // its either not defined or a primitive value\n            promise = self.set(path[0], Y.Map)\n          }\n          return promise.then(function (map) {\n            return map.observePath(path.slice(1), f)\n          }).then(function (_deleteChildObservers) {\n            // update deleteChildObservers\n            deleteChildObservers = _deleteChildObservers\n            return Promise.resolve() // Promise does not return anything\n          })\n        }\n        var observer = function (event) {\n          if (event.name === path[0]) {\n            if (deleteChildObservers != null) {\n              deleteChildObservers()\n            }\n            if (event.type === 'add' || event.type === 'update') {\n              resetObserverPath()\n            }\n            // TODO: what about the delete events?\n          }\n        }\n        self.observe(observer)\n        return resetObserverPath().then(function () {\n          // this promise contains a function that deletes all the child observers\n          // and how to unobserve the observe from this object\n          return Promise.resolve(function () { // eslint-disable-line\n            if (deleteChildObservers != null) {\n              deleteChildObservers()\n            }\n            self.unobserve(observer)\n          })\n        })\n      }\n    }\n    * _changed (transaction, op) {\n      if (op.struct === 'Delete') {\n        var target = yield* transaction.getOperation(op.target)\n        op.key = target.parentSub\n      }\n      this.eventHandler.receivedOp(op)\n    }\n  }\n  Y.extend('Map', new Y.utils.CustomType({\n    name: 'Map',\n    class: YMap,\n    struct: 'Map',\n    initType: function * YMapInitializer (os, model) {\n      var contents = {}\n      var opContents = {}\n      var map = model.map\n      for (var name in map) {\n        var op = yield* this.getOperation(map[name])\n        if (op.opContent != null) {\n          opContents[name] = op.opContent\n        } else {\n          contents[name] = op.content[0]\n        }\n      }\n      return new YMap(os, model, contents, opContents)\n    }\n  }))\n}\n\nmodule.exports = extend\nif (typeof Y !== 'undefined') {\n  extend(Y)\n}\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/* global Y */\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction extend(Y /* :any */) {\n  var YMap = (function () {\n    /* ::\n    _model: Id;\n    os: Y.AbstractDatabase;\n    map: Object;\n    contents: any;\n    opContents: Object;\n    eventHandler: Function;\n    */\n\n    function YMap(os, model, contents, opContents) {\n      var _this = this;\n\n      _classCallCheck(this, YMap);\n\n      this._model = model.id;\n      this.os = os;\n      this.map = Y.utils.copyObject(model.map);\n      this.contents = contents;\n      this.opContents = opContents;\n      this.eventHandler = new Y.utils.EventHandler(function (op) {\n        var oldValue;\n        // key is the name to use to access (op)content\n        var key = op.struct === 'Delete' ? op.key : op.parentSub;\n\n        // compute oldValue\n        if (_this.opContents[key] != null) {\n          (function () {\n            var prevType = _this.opContents[key];\n            oldValue = function () {\n              // eslint-disable-line\n              return new Promise(function (resolve) {\n                _this.os.requestTransaction(regeneratorRuntime.mark(function _callee() {\n                  var type;\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          return _context.delegateYield(this.getType(prevType), 't0', 1);\n\n                        case 1:\n                          type = _context.t0;\n\n                          resolve(type);\n\n                        case 3:\n                        case 'end':\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee, this);\n                }));\n              });\n            };\n          })();\n        } else {\n          oldValue = _this.contents[key];\n        }\n        // compute op event\n        if (op.struct === 'Insert') {\n          if (op.left === null) {\n            var value;\n            // TODO: what if op.deleted??? I partially handles this case here.. (maybe from the previous version)\n            if (op.opContent != null) {\n              value = function () {\n                // eslint-disable-line\n                return new Promise(function (resolve) {\n                  _this.os.requestTransaction(regeneratorRuntime.mark(function _callee2() {\n                    var type;\n                    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            return _context2.delegateYield(this.getType(op.opContent), 't0', 1);\n\n                          case 1:\n                            type = _context2.t0;\n\n                            resolve(type);\n\n                          case 3:\n                          case 'end':\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2, this);\n                  }));\n                });\n              };\n              delete _this.contents[key];\n              if (op.deleted) {\n                delete _this.opContents[key];\n              } else {\n                _this.opContents[key] = op.opContent;\n              }\n            } else {\n              value = op.content[0];\n              delete _this.opContents[key];\n              if (op.deleted) {\n                delete _this.contents[key];\n              } else {\n                _this.contents[key] = op.content[0];\n              }\n            }\n            _this.map[key] = op.id;\n            if (oldValue === undefined) {\n              _this.eventHandler.callEventListeners({\n                name: key,\n                object: _this,\n                type: 'add',\n                value: value\n              });\n            } else {\n              _this.eventHandler.callEventListeners({\n                name: key,\n                object: _this,\n                oldValue: oldValue,\n                type: 'update',\n                value: value\n              });\n            }\n          }\n        } else if (op.struct === 'Delete') {\n          if (Y.utils.compareIds(_this.map[key], op.target)) {\n            delete _this.opContents[key];\n            delete _this.contents[key];\n            _this.eventHandler.callEventListeners({\n              name: key,\n              object: _this,\n              oldValue: oldValue,\n              type: 'delete'\n            });\n          }\n        } else {\n          throw new Error('Unexpected Operation!');\n        }\n      });\n    }\n\n    _createClass(YMap, [{\n      key: '_destroy',\n      value: function _destroy() {\n        this.eventHandler.destroy();\n        this.eventHandler = null;\n        this.contents = null;\n        this.opContents = null;\n        this._model = null;\n        this.os = null;\n        this.map = null;\n      }\n    }, {\n      key: 'get',\n      value: function get(key) {\n        var _this2 = this;\n\n        // return property.\n        // if property does not exist, return null\n        // if property is a type, return a promise\n        if (key == null || typeof key !== 'string') {\n          throw new Error('You must specify a key (as string)!');\n        }\n        if (this.opContents[key] == null) {\n          return this.contents[key];\n        } else {\n          return new Promise(function (resolve) {\n            var oid = _this2.opContents[key];\n            _this2.os.requestTransaction(regeneratorRuntime.mark(function _callee3() {\n              var type;\n              return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      return _context3.delegateYield(this.getType(oid), 't0', 1);\n\n                    case 1:\n                      type = _context3.t0;\n\n                      resolve(type);\n\n                    case 3:\n                    case 'end':\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3, this);\n            }));\n          });\n        }\n      }\n    }, {\n      key: 'keys',\n      value: function keys() {\n        return Object.keys(this.contents).concat(Object.keys(this.opContents));\n      }\n    }, {\n      key: 'keysPrimitives',\n      value: function keysPrimitives() {\n        return Object.keys(this.contents);\n      }\n    }, {\n      key: 'keysTypes',\n      value: function keysTypes() {\n        return Object.keys(this.opContents);\n      }\n      /*\n        If there is a primitive (not a custom type), then return it.\n        Returns all primitive values, if propertyName is specified!\n        Note: modifying the return value could result in inconsistencies!\n          -- so make sure to copy it first!\n      */\n\n    }, {\n      key: 'getPrimitive',\n      value: function getPrimitive(key) {\n        if (key == null) {\n          return Y.utils.copyObject(this.contents);\n        } else if (typeof key !== 'string') {\n          throw new Error('Key is expected to be a string!');\n        } else {\n          return this.contents[key];\n        }\n      }\n    }, {\n      key: 'getType',\n      value: function getType(key) {\n        var _this3 = this;\n\n        if (key == null || typeof key !== 'string') {\n          throw new Error('You must specify a key (as string)!');\n        } else if (this.opContents[key] != null) {\n          return new Promise(function (resolve) {\n            var oid = _this3.opContents[key];\n            _this3.os.requestTransaction(regeneratorRuntime.mark(function _callee4() {\n              var type;\n              return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      return _context4.delegateYield(this.getType(oid), 't0', 1);\n\n                    case 1:\n                      type = _context4.t0;\n\n                      resolve(type);\n\n                    case 3:\n                    case 'end':\n                      return _context4.stop();\n                  }\n                }\n              }, _callee4, this);\n            }));\n          });\n        } else {\n          return Promise.reject('No property specified for this key!');\n        }\n      }\n    }, {\n      key: 'delete',\n      value: function _delete(key) {\n        var right = this.map[key];\n        if (right != null) {\n          var del = {\n            target: right,\n            struct: 'Delete'\n          };\n          var eventHandler = this.eventHandler;\n          var modDel = Y.utils.copyObject(del);\n          modDel.key = key;\n          this.os.requestTransaction(regeneratorRuntime.mark(function _callee5() {\n            return regeneratorRuntime.wrap(function _callee5$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    return _context5.delegateYield(eventHandler.awaitOps(this, this.applyCreatedOperations, [[del]]), 't0', 1);\n\n                  case 1:\n                  case 'end':\n                    return _context5.stop();\n                }\n              }\n            }, _callee5, this);\n          }));\n          // always remember to do that after this.os.requestTransaction\n          // (otherwise values might contain a undefined reference to type)\n          eventHandler.awaitAndPrematurelyCall([modDel]);\n        }\n      }\n    }, {\n      key: 'set',\n      value: function set(key, value) {\n        var _this4 = this;\n\n        // set property.\n        // if property is a type, return a promise\n        // if not, apply immediately on this type an call event\n\n        var right = this.map[key] || null;\n        var insert /* :any */ = {\n          id: this.os.getNextOpId(1),\n          left: null,\n          right: right,\n          origin: null,\n          parent: this._model,\n          parentSub: key,\n          struct: 'Insert'\n        };\n        var eventHandler = this.eventHandler;\n        return new Promise(function (resolve) {\n          var typeDefinition = Y.utils.isTypeDefinition(value);\n          if (typeDefinition !== false) {\n            var typeid = _this4.os.getNextOpId(1);\n            insert.opContent = typeid;\n            // construct a new type\n            _this4.os.requestTransaction(regeneratorRuntime.mark(function _callee6() {\n              var type;\n              return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                while (1) {\n                  switch (_context6.prev = _context6.next) {\n                    case 0:\n                      return _context6.delegateYield(this.createType(typeDefinition, typeid), 't0', 1);\n\n                    case 1:\n                      type = _context6.t0;\n                      return _context6.delegateYield(eventHandler.awaitOps(this, this.applyCreatedOperations, [[insert]]), 't1', 3);\n\n                    case 3:\n                      resolve(type);\n\n                    case 4:\n                    case 'end':\n                      return _context6.stop();\n                  }\n                }\n              }, _callee6, this);\n            }));\n            // always remember to do that after this.os.requestTransaction\n            // (otherwise values might contain a undefined reference to type)\n            eventHandler.awaitAndPrematurelyCall([insert]);\n          } else {\n            insert.content = [value];\n            _this4.os.requestTransaction(regeneratorRuntime.mark(function _callee7() {\n              return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                while (1) {\n                  switch (_context7.prev = _context7.next) {\n                    case 0:\n                      return _context7.delegateYield(eventHandler.awaitOps(this, this.applyCreatedOperations, [[insert]]), 't0', 1);\n\n                    case 1:\n                    case 'end':\n                      return _context7.stop();\n                  }\n                }\n              }, _callee7, this);\n            }));\n            // always remember to do that after this.os.requestTransaction\n            // (otherwise values might contain a undefined reference to type)\n            eventHandler.awaitAndPrematurelyCall([insert]);\n            resolve(value);\n          }\n        });\n      }\n    }, {\n      key: 'observe',\n      value: function observe(f) {\n        this.eventHandler.addEventListener(f);\n      }\n    }, {\n      key: 'unobserve',\n      value: function unobserve(f) {\n        this.eventHandler.removeEventListener(f);\n      }\n      /*\n        Observe a path.\n         E.g.\n        ```\n        o.set('textarea', Y.TextBind)\n        o.observePath(['textarea'], function(t){\n          // is called whenever textarea is replaced\n          t.bind(textarea)\n        })\n         returns a Promise that contains a function that removes the observer from the path.\n      */\n\n    }, {\n      key: 'observePath',\n      value: function observePath(path, f) {\n        var self = this;\n        function observeProperty(event) {\n          // call f whenever path changes\n          if (event.name === propertyName) {\n            // call this also for delete events!\n            var property = self.get(propertyName);\n            if (property instanceof Promise) {\n              property.then(f);\n            } else {\n              f(property);\n            }\n          }\n        }\n\n        if (path.length < 1) {\n          f(this);\n          return Promise.resolve(function () {});\n        } else if (path.length === 1) {\n          var propertyName = path[0];\n          var property = self.get(propertyName);\n          if (property instanceof Promise) {\n            property.then(f);\n          } else {\n            f(property);\n          }\n          this.observe(observeProperty);\n          return Promise.resolve(function () {\n            self.unobserve(f);\n          });\n        } else {\n          var deleteChildObservers;\n          var resetObserverPath = function resetObserverPath() {\n            var promise = self.get(path[0]);\n            if (!promise instanceof Promise) {\n              // its either not defined or a primitive value\n              promise = self.set(path[0], Y.Map);\n            }\n            return promise.then(function (map) {\n              return map.observePath(path.slice(1), f);\n            }).then(function (_deleteChildObservers) {\n              // update deleteChildObservers\n              deleteChildObservers = _deleteChildObservers;\n              return Promise.resolve(); // Promise does not return anything\n            });\n          };\n          var observer = function observer(event) {\n            if (event.name === path[0]) {\n              if (deleteChildObservers != null) {\n                deleteChildObservers();\n              }\n              if (event.type === 'add' || event.type === 'update') {\n                resetObserverPath();\n              }\n              // TODO: what about the delete events?\n            }\n          };\n          self.observe(observer);\n          return resetObserverPath().then(function () {\n            // this promise contains a function that deletes all the child observers\n            // and how to unobserve the observe from this object\n            return Promise.resolve(function () {\n              // eslint-disable-line\n              if (deleteChildObservers != null) {\n                deleteChildObservers();\n              }\n              self.unobserve(observer);\n            });\n          });\n        }\n      }\n    }, {\n      key: '_changed',\n      value: regeneratorRuntime.mark(function _changed(transaction, op) {\n        var target;\n        return regeneratorRuntime.wrap(function _changed$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (!(op.struct === 'Delete')) {\n                  _context8.next = 4;\n                  break;\n                }\n\n                return _context8.delegateYield(transaction.getOperation(op.target), 't0', 2);\n\n              case 2:\n                target = _context8.t0;\n\n                op.key = target.parentSub;\n\n              case 4:\n                this.eventHandler.receivedOp(op);\n\n              case 5:\n              case 'end':\n                return _context8.stop();\n            }\n          }\n        }, _changed, this);\n      })\n    }]);\n\n    return YMap;\n  })();\n\n  Y.extend('Map', new Y.utils.CustomType({\n    name: 'Map',\n    class: YMap,\n    struct: 'Map',\n    initType: regeneratorRuntime.mark(function YMapInitializer(os, model) {\n      var contents, opContents, map, name, op;\n      return regeneratorRuntime.wrap(function YMapInitializer$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              contents = {};\n              opContents = {};\n              map = model.map;\n              _context9.t0 = regeneratorRuntime.keys(map);\n\n            case 4:\n              if ((_context9.t1 = _context9.t0()).done) {\n                _context9.next = 11;\n                break;\n              }\n\n              name = _context9.t1.value;\n              return _context9.delegateYield(this.getOperation(map[name]), 't2', 7);\n\n            case 7:\n              op = _context9.t2;\n\n              if (op.opContent != null) {\n                opContents[name] = op.opContent;\n              } else {\n                contents[name] = op.content[0];\n              }\n              _context9.next = 4;\n              break;\n\n            case 11:\n              return _context9.abrupt('return', new YMap(os, model, contents, opContents));\n\n            case 12:\n            case 'end':\n              return _context9.stop();\n          }\n        }\n      }, YMapInitializer, this);\n    })\n  }));\n}\n\nmodule.exports = extend;\nif (typeof Y !== 'undefined') {\n  extend(Y);\n}\n\n},{}]},{},[1])\n\n"],"sourceRoot":"/source/"}