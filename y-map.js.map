{"version":3,"sources":["../yjs/node_modules/browser-pack/_prelude.js","src/Map.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","extend","Y","YMap","_Y$utils$CustomType","os","model","contents","opContents","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","_model","id","map","utils","copyObject","eventHandler","EventHandler","op","oldValue","key","struct","parentSub","getType","left","value","opContent","deleted","content","undefined","callEventListeners","name","object","type","compareIds","target","_inherits","_createClass","destroy","keys","concat","Promise","reject","right","del","modDel","requestTransaction","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","delegateYield","awaitOps","applyCreatedOperations","stop","awaitAndPrematurelyCall","insert","getNextOpId","origin","parent","typeDefinition","isTypeDefinition","createType","_callee2","_context2","_callee3","_context3","addEventListener","removeEventListener","path","observeProperty","event","propertyName","self","get","observe","unobserve","deleteChildObservers","resetObserverPath","set","Map","observePath","slice","observer","_changed","transaction","_context4","getOperation","t0","store","initType","receivedOp","CustomType","CustomTypeDefinition","class","YMapInitializer","_context5","t1","done","t2","abrupt"],"mappings":"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","file":"y-map.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global Y */\n'use strict'\n\nfunction extend (Y /* :any */) {\n  class YMap extends Y.utils.CustomType {\n    /* ::\n    _model: Id;\n    os: Y.AbstractDatabase;\n    map: Object;\n    contents: any;\n    opContents: Object;\n    eventHandler: Function;\n    */\n    constructor (os, model, contents, opContents) {\n      super()\n      this._model = model.id\n      this.os = os\n      this.map = Y.utils.copyObject(model.map)\n      this.contents = contents\n      this.opContents = opContents\n      this.eventHandler = new Y.utils.EventHandler(op => {\n        var oldValue\n        // key is the name to use to access (op)content\n        var key = op.struct === 'Delete' ? op.key : op.parentSub\n\n        // compute oldValue\n        if (this.opContents[key] != null) {\n          oldValue = this.os.getType(this.opContents[key])\n        } else {\n          oldValue = this.contents[key]\n        }\n        // compute op event\n        if (op.struct === 'Insert') {\n          if (op.left === null) {\n            var value\n            // TODO: what if op.deleted??? I partially handles this case here.. but need to send delete event instead. somehow related to #4\n            if (op.opContent != null) {\n              value = this.os.getType(this.opContents[key])\n              delete this.contents[key]\n              if (op.deleted) {\n                delete this.opContents[key]\n              } else {\n                this.opContents[key] = op.opContent\n              }\n            } else {\n              value = op.content[0]\n              delete this.opContents[key]\n              if (op.deleted) {\n                delete this.contents[key]\n              } else {\n                this.contents[key] = op.content[0]\n              }\n            }\n            this.map[key] = op.id\n            if (oldValue === undefined) {\n              this.eventHandler.callEventListeners({\n                name: key,\n                object: this,\n                type: 'add',\n                value: value\n              })\n            } else {\n              this.eventHandler.callEventListeners({\n                name: key,\n                object: this,\n                oldValue: oldValue,\n                type: 'update',\n                value: value\n              })\n            }\n          }\n        } else if (op.struct === 'Delete') {\n          if (Y.utils.compareIds(this.map[key], op.target)) {\n            delete this.opContents[key]\n            delete this.contents[key]\n            this.eventHandler.callEventListeners({\n              name: key,\n              object: this,\n              oldValue: oldValue,\n              type: 'delete'\n            })\n          }\n        } else {\n          throw new Error('Unexpected Operation!')\n        }\n      })\n    }\n    _destroy () {\n      this.eventHandler.destroy()\n      this.eventHandler = null\n      this.contents = null\n      this.opContents = null\n      this._model = null\n      this.os = null\n      this.map = null\n    }\n    get (key) {\n      // return property.\n      // if property does not exist, return null\n      // if property is a type, return a promise\n      if (key == null || typeof key !== 'string') {\n        throw new Error('You must specify a key (as string)!')\n      }\n      if (this.opContents[key] == null) {\n        return this.contents[key]\n      } else {\n        return this.os.getType(this.opContents[key])\n      }\n    }\n    keys () {\n      return Object.keys(this.contents).concat(Object.keys(this.opContents))\n    }\n    keysPrimitives () {\n      return Object.keys(this.contents)\n    }\n    keysTypes () {\n      return Object.keys(this.opContents)\n    }\n    /*\n      If there is a primitive (not a custom type), then return it.\n      Returns all primitive values, if propertyName is specified!\n      Note: modifying the return value could result in inconsistencies!\n        -- so make sure to copy it first!\n    */\n    getPrimitive (key) {\n      if (key == null) {\n        return Y.utils.copyObject(this.contents)\n      } else if (typeof key !== 'string') {\n        throw new Error('Key is expected to be a string!')\n      } else {\n        return this.contents[key]\n      }\n    }\n    getType (key) {\n      if (key == null || typeof key !== 'string') {\n        throw new Error('You must specify a key (as string)!')\n      } else if (this.opContents[key] != null) {\n        return this.os.getType(this.opContents[key])\n      } else {\n        return Promise.reject('No property specified for this key!')\n      }\n    }\n    delete (key) {\n      var right = this.map[key]\n      if (right != null) {\n        var del = {\n          target: right,\n          struct: 'Delete'\n        }\n        var eventHandler = this.eventHandler\n        var modDel = Y.utils.copyObject(del)\n        modDel.key = key\n        this.os.requestTransaction(function *() {\n          yield* eventHandler.awaitOps(this, this.applyCreatedOperations, [[del]])\n        })\n        // always remember to do that after this.os.requestTransaction\n        // (otherwise values might contain a undefined reference to type)\n        eventHandler.awaitAndPrematurelyCall([modDel])\n      }\n    }\n    set (key, value) {\n      // set property.\n      // if property is a type, return a promise\n      // if not, apply immediately on this type an call event\n\n      var right = this.map[key] || null\n      var insert /* :any */ = {\n        id: this.os.getNextOpId(1),\n        left: null,\n        right: right,\n        origin: null,\n        parent: this._model,\n        parentSub: key,\n        struct: 'Insert'\n      }\n      var eventHandler = this.eventHandler\n      var typeDefinition = Y.utils.isTypeDefinition(value)\n      if (typeDefinition !== false) {\n        var type = this.os.createType(typeDefinition)\n        insert.opContent = type._model\n        // construct a new type\n        this.os.requestTransaction(function *() {\n          yield* eventHandler.awaitOps(this, this.applyCreatedOperations, [[insert]])\n        })\n        // always remember to do that after this.os.requestTransaction\n        // (otherwise values might contain a undefined reference to type)\n        eventHandler.awaitAndPrematurelyCall([insert])\n        return type\n      } else {\n        insert.content = [value]\n        this.os.requestTransaction(function * () {\n          yield* eventHandler.awaitOps(this, this.applyCreatedOperations, [[insert]])\n        })\n        // always remember to do that after this.os.requestTransaction\n        // (otherwise values might contain a undefined reference to type)\n        eventHandler.awaitAndPrematurelyCall([insert])\n        return value\n      }\n    }\n    observe (f) {\n      this.eventHandler.addEventListener(f)\n    }\n    unobserve (f) {\n      this.eventHandler.removeEventListener(f)\n    }\n    /*\n      Observe a path.\n\n      E.g.\n      ```\n      o.set('textarea', Y.TextBind)\n      o.observePath(['textarea'], function(t){\n        // is called whenever textarea is replaced\n        t.bind(textarea)\n      })\n\n      returns a Promise that contains a function that removes the observer from the path.\n    */\n    observePath (path, f) {\n      var self = this\n      var propertyName\n      function observeProperty (event) {\n        // call f whenever path changes\n        if (event.name === propertyName) {\n          // call this also for delete events!\n          f(self.get(propertyName))\n        }\n      }\n\n      if (path.length < 1) {\n        f(this)\n        return function () {}\n      } else if (path.length === 1) {\n        propertyName = path[0]\n        f(self.get(propertyName))\n        this.observe(observeProperty)\n        return function () {\n          self.unobserve(f)\n        }\n      } else {\n        var deleteChildObservers\n        var resetObserverPath = function () {\n          var map = self.get(path[0])\n          if (!(map instanceof YMap)) {\n            // its either not defined or a primitive value / not a map\n            map = self.set(path[0], Y.Map)\n          }\n          deleteChildObservers = map.observePath(path.slice(1), f)\n        }\n        var observer = function (event) {\n          if (event.name === path[0]) {\n            if (deleteChildObservers != null) {\n              deleteChildObservers()\n            }\n            if (event.type === 'add' || event.type === 'update') {\n              resetObserverPath()\n            }\n            // TODO: what about the delete events?\n          }\n        }\n        self.observe(observer)\n        resetObserverPath()\n        // this promise contains a function that deletes all the child observers\n        // and how to unobserve the observe from this object\n        return function () {\n          if (deleteChildObservers != null) {\n            deleteChildObservers()\n          }\n          self.unobserve(observer)\n        }\n      }\n    }\n    * _changed (transaction, op) {\n      if (op.struct === 'Delete') {\n        var target = yield* transaction.getOperation(op.target)\n        op.key = target.parentSub\n      } else if (op.opContent != null) {\n        yield* transaction.store.initType.call(transaction, op.opContent)\n      }\n      this.eventHandler.receivedOp(op)\n    }\n  }\n  Y.extend('Map', new Y.utils.CustomTypeDefinition({\n    name: 'Map',\n    class: YMap,\n    struct: 'Map',\n    initType: function * YMapInitializer (os, model) {\n      var contents = {}\n      var opContents = {}\n      var map = model.map\n      for (var name in map) {\n        var op = yield* this.getOperation(map[name])\n        if (op.deleted) continue\n        if (op.opContent != null) {\n          opContents[name] = op.opContent\n          yield* this.store.initType.call(this, op.opContent)\n        } else {\n          contents[name] = op.content[0]\n        }\n      }\n      return new YMap(os, model, contents, opContents)\n    },\n    createType: function YMapCreator (os, model) {\n      return new YMap(os, model, {}, {})\n    }\n  }))\n}\n\nmodule.exports = extend\nif (typeof Y !== 'undefined') {\n  extend(Y)\n}\n"],"sourceRoot":"/source/"}